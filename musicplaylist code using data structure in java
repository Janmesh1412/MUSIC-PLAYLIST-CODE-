import java.util.*;
class musicPlaylist
{
    public static void main(String[] args) 
    {
       Scanner sc = new Scanner(System.in);
        String playlistName="";
        Playlist p = new Playlist();
        String title,artist;
        System.out.println("LOGIN");
        p.login();
        System.out.println("LOGIN successfully");
       
         boolean flag=true;
        do{
            
            System.out.println(" 1 To make Playlist \n 2 View account details \n 3 To listen FM Station \n 4 To exit");
            System.out.println("Enter your choice");
            int c= sc.nextInt(); 
            switch(c)
            {      case 1: 
                        System.out.println("Enter Suitable  Playlist Name ");
                        playlistName= sc.next();
                        sc.nextLine();
                        System.out.println("WELCOME");
                        System.out.println("---"+playlistName+" playlist---");
                       
                        do
                        {
                        System.out.println(" 1  To Add song at start \n 2  To Add song at last  \n 3  Play current song \n 4  Play next song \n 5  Play previous song  \n 6  Remove particular song from playlist \n 7  Display the Queue \n 8  exit");
                        System.out.println("Enter your suitable choice ");
                        int v = sc.nextInt();
                        switch(v)
                        {
                        case 1: 
                                System.out.println("Enter song title");
                                System.out.println("Do Not Use '_' for Space ");
                                title=sc.next();
                                p.addSongAtFirst(title);
                                System.out.println("Song Added Sucessfully");
                                break;
                        case 2: 
                                System.out.println("Enter song title");
                                System.out.println("Do Not Use '_' for Space ");
                                title=sc.next();
                                p.addSongAtLast(title);
                                System.out.println("Song Added Sucessfully");
                                break;
                        case 3: System.out.println("Play song");     
                                 p.playCurrentSong();
                                 break;
                         case 4: System.out.println("play next song");   
                                 p.playNextSong();
                                 break;
                        case 5: System.out.println("play previous song");
                                 p.playPreviousSong();
                                 break;   
                        case 6:   
                                System.out.println("Enter song title you want to remove");
                                title=sc.next();
                                p. Remove_particular_song_from_playlist(title);
                                break;
                        case 7: System.out.println("Displaying PLAYLIST");
                                p.display_Queue();
                                break;
                        

                        case 8: flag=false;
                                break;
                                
                        }
                       }while(flag);
                       break;
                case 2: p.profile(playlistName);
                        break;       
                case 3: p.Fm_Station();
                        break;   
                case 4: System.exit(0); 

            }
          }while(true);
    }
}

class Playlist
{    int size;
     Scanner sc = new Scanner(System.in);
     String payment_Method;
     int amount;
     int month;
     String number,name;
       String subsceiption_Type;
    void login()
    {   Scanner sc = new Scanner(System.in);
        
        int count  =1;
        boolean n = false;
        System.out.println("ENTER YOUR NAME");
        name=sc.next();
            for(boolean check=false;check!=true;)
		{
			System.out.println("Enter Your Mobile Number");
			number=sc.next();
			if(number.length()!=10)
			{	System.out.print("-It'number must be of 10 digits long. \nTry Again. \nEnter: ");
				continue;
			}
			int spc=0,dig=0;
			for(int i=0;i<10;i++)
			{
				if( number.charAt(i)>='0' && number.charAt(i)<='9')
				dig++;
				
				if(number.charAt(i)==' ')
				spc++;
			}
			if(dig!=10)
			{
				System.out.print("-It'number must contains Digit Only. \n Try Again. \n Enter: ");
				continue;
			}
			if(spc!=0)
			{
				System.out.print("-It'number does'nt contains Space. \n Try Again. \n Enter: ");
				continue;
			}
			check=true;
		}
             
            System.out.println("OTP sent to your mobile no."+number);
            Random rand= new Random();
            int otp=rand.nextInt(9999);
            System.out.println("Your OTP for music application is :"+otp);
            int c = 0;

		for (int i = 3; i > 0; i--) {
			System.out.println("Enter otp");
			int OTP = sc.nextInt();
			if (OTP == otp) {
				break;
			}
            System.out.println("Invalid Input Please Enter Right OTP :");
			System.out.println("Attempt left " + (i - 1));
			c++;

		}
		if (c == 3) {
			System.out.println("You Havebeen Logged Oout Of The System" );
            System.out.println("Due To 3 Consecutive Uunsuccessful Trial");
            System.out.println("Please ReEnter Your details and ask for an otp aggain ");
			System.exit(0);
		} 
         boolean b = true;
        System.out.println("SUBSCRIPTION LIST :");
        do{
            System.out.println("Subscription: 1 FREE for 7 days ");
            System.out.println("Subscription: 2 FOR 1 MONTH");
            System.out.println("Subscription: 3 FOR 3 MONTH");
            System.out.println("please subscription number you would like to continue with");
            int choice = sc.nextInt();
            switch(choice)
            {
                case 1: System.out.println("FREE SUBSCRIPTION WITH ADVERTISMENT");
                        subsceiption_Type="FREE";

                        b=false;
                        break;
                       
                case 2: System.out.println(" 1 MONTH SUBSCRIPYION WITHOUT ADD");   
                        subsceiption_Type="1 MONTH " ;
                        month =1;
                        amount=199;
                        PAYMENT();
                         b=false;
                        break;
                case 3: System.out.println("3 MONTH SUBSCRIPTION"); 
                        subsceiption_Type="3 MONTH ";
                        month=3; 
                        amount=599;        
                        PAYMENT();
                         b=false;
                        break;
                          

            }
        }while(b);
        

            
    }
    class Node 
    {
        String song;
            Node next;
            Node prev;
            public Object songname;
            Node(String song)
        {
            this.song = song ;
            this.songname=song;
            this.next=next;
            this.prev=prev;
        }
    }
        Node first=null;
        Node currentSong=null;
       

   void addSongAtLast(String song)
    {
        Node newnode=new Node(song);
         if(first==null)
         {
            first=newnode;
            currentSong=newnode;
         }
         else 
         {
                Node temp=first;
            while(temp.next!=null)
            {
                temp=temp.next;
            }
            temp.next=newnode;
            newnode.prev=temp;

         }
    }
    void addSongAtFirst(String song)
    {
            Node newnode=new Node(song);
        if(first==null)
        {   
            first=newnode;
            currentSong=newnode;
        }
        else 
        {  
            newnode.next=first;
            first.prev=newnode;
            first=newnode;
            currentSong=newnode;
        }
        size++;
    }
    
 
    void Remove_particular_song_from_playlist(String songname)
    {
            
         Node current = first;
        while (current != null) 
        {
            if (current.songname.equals(songname)) {
                
                if (current == first) {
                    first = current.next;
                    if (first != null) {
                        first.prev = null;
                    }
                } else {
                    
                   current.prev.next = current.next;
                    if (current.next != null) {
                        current.next.prev = current.prev;
                    }
                }
                return; 
            }

            current = current.next; 
        }
    size--;
}
    void display_Queue()
    {
    
        if(first==null)
        {
            System.out.println("emptyyy");
        }
        else 
        { 
                Node temp=first;
                System.out.println("SR.NO || TITLES");
                int i=0;
            do
              { i++;
                System.out.println("   "+i+"      "+temp.song.toString());
                temp=temp.next;

              }while(temp!=null);

        }
    }
    
     public void playCurrentSong() {
        if (currentSong != null) {
            System.out.println("Playing: " + currentSong.song.toString());
        } else {
            System.out.println("No song is selected.");
        }
    }

    public void playNextSong() {
        if (currentSong != null && currentSong.next != null) {
            currentSong = currentSong.next;
            playCurrentSong();
        } else {
            System.out.println("No next song available.");
        }
    }

    public void playPreviousSong() {
        if (currentSong != null && currentSong.prev != null) {
            currentSong = currentSong.prev;
            playCurrentSong();
        } else {
            System.out.println("No previous song available.");
        }
    }
    void PAYMENT()
    { 
        Scanner sc = new Scanner(System.in);
        int pays = 0, pca = 0, pcv = 0, pu = 0, pc = 0, length = 0, pay = 0;
        String card, cvv, upi, passu;
        System.out.println("------------------------------------------------");
        System.out.println("Which payment mode would you like to choose?");
        System.out.println("1.Debit Card");
        System.out.println("2.G-Pay");

        pay = sc.nextInt();
        switch (pay) {
            case 1: {
                System.out.println("Enter Card No.");
                do {
                    pca++;
                    if (pca == 4) {
                        System.out.println("Sorry you have reached an extent!!");
                        System.out.println("Please sign in after an hour");
                        System.exit(0);
                    }
                    card = sc.nextLine();
                    if (card.length() == 16) {
                        System.out.println("You have enter correct password");
                        break;
                    } else {
                        System.out.println("The card no. should contain 16 digits ");
                        System.out.println("Enter correct card no.");
                    }
                } while (pca < 4);

                System.out.println("Enter CVV No.");
                do {
                    pcv++;
                    if (pcv == 4) {
                        System.out.println("Sorry you have reached an extent!!");
                        System.out.println("EXITING THE CODE...");
                        System.exit(0);
                    }
                    cvv = sc.nextLine();
                    if (cvv.length() == 3) {
                        System.out.println("Your cvv no. is correct");
                        break;
                    } else {
                        System.out.println("Enter correct cvv");
                    }
                } while (pcv < 4);

                System.out.println("Generating OTP.....");
                Random r = new Random();
                length = r.nextInt(10000);
                System.out.println("Your OTP: " + length);
                System.out.println("Enter OTP");
                int otp1 = sc.nextInt();
                if (otp1 == length) {
                    System.out.println("Your payment is successful!!");

                } else {
                    System.out.println("Sorry you have enter wrong otp");
                    System.out.println("Sorry you have reached an extent!!");
                    System.out.println("Please sign in after an hour");
                    System.exit(0);
                }
                break;

            }
            case 2: {
                System.out.println("Enter UPI");

                do {
                    pu++;
                    if (pu == 4) {
                        System.out.println("Sorry you have reached an extent!!");
                        System.out.println("Please sign in after an hour");
                        System.exit(0);
                    }
                    upi = sc.nextLine();
                    if (upi.length() == 16) {
                        System.out.println("Your payment is successful");
                        break;
                    } else {
                        System.out.println("Upi id should contain 16 digits ");
                    }
                } while (pu < 4);

                System.out.print("Enter password: ");
                do {
                    pc++;
                    if (pc == 4) {
                        System.out.println("Sorry you have reached an extent!!");
                        System.out.println("Please sign in after an hour");
                        System.exit(0);
                    }
                    passu = sc.nextLine();
                    if (passu.length() == 4) {
                        System.out.println("Your payment is successful!!");
                        break;
                    } else {

                        System.out.println("password should contain 4 digits");
                        System.out.print("Enter valid password: ");
                    }
                } while (pc < 4);
                break;
            }
            default:
                System.out.println("Sorry!! Invalid choice");
        }

    }
    
    void profile(String playlistName)
    {
        System.out.println("NAME                 :"+name);
        System.out.println("MOBILE NUMBER        :"+number);
        System.out.println("PLAYLIST NAME        :"+playlistName);
        System.out.println("SUBSCIRPTION TYPE    :"+subsceiption_Type);
        System.out.println("SUBSCRIPTION AMOUNT  :"+amount+" (Free trails For 7 Days)");
        System.out.println("SUBSCRIPTION DURATION:"+month+"   (Free For 7 Days)");
       
    }

   
    void Fm_Station()
    { boolean j =true;
        double RadioStation;
        do{
            System.out.println("1.FM STATION 91.5");
            System.out.println("2.FM STATION 93.5");
            System.out.println("3.FM STATION 108.5");
            System.out.println("4.TO EXIT FROM RADIO STATION");
            System.out.println("ENTER YOUR  CHOICE");
            int select=sc.nextInt();
            switch(select)
            {
                case 1: 
                        RadioStation= 91.5;
                        System.out.println("CURRENT MIRCHI RADIO STATION "+RadioStation+" IS ON AIR");
                        break;
                case 2: 
                        RadioStation= 93.5;
                        System.out.println("CURRENT MIRCHI RADIO STATION "+RadioStation+" IS ON AIR");
                        break;
                case 3: 
                        RadioStation= 108.5;
                        System.out.println("CURRENT MIRCHI RADIO STATION "+RadioStation+" IS ON AIR");
                        break;
                case 4: j=false;
                        break;                      
            }
        }while(j);
    }
}
